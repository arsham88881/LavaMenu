// <auto-generated />
using System;
using LavaMenu.Application.infrastructure.DBcontext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LavaMenu.Application.Migrations
{
    [DbContext(typeof(db))]
    partial class dbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.Product", b =>
                {
                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CateguryId")
                        .HasColumnType("int");

                    b.Property<int?>("DiscountAmountOption")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithDiscount")
                        .HasColumnType("bit");

                    b.Property<string>("PictureSrc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("productPrice")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CateguryId");

                    b.HasIndex("ProductTitle")
                        .IsUnique();

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.ProductCategury", b =>
                {
                    b.Property<int>("CateguryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CateguryId"));

                    b.Property<string>("CateguryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("SrcCategury")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CateguryId");

                    b.HasIndex("CateguryName")
                        .IsUnique();

                    b.ToTable("categury", (string)null);
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("UserId"));

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.UserRole", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("RoleId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.Product", b =>
                {
                    b.HasOne("LavaMenu.Application.Domain.Entitys.ProductCategury", "categury")
                        .WithMany("products")
                        .HasForeignKey("CateguryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("categury");
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.UserRole", b =>
                {
                    b.HasOne("LavaMenu.Application.Domain.Entitys.User", null)
                        .WithOne("Role")
                        .HasForeignKey("LavaMenu.Application.Domain.Entitys.UserRole", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.ProductCategury", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("LavaMenu.Application.Domain.Entitys.User", b =>
                {
                    b.Navigation("Role")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
